name: Automatically update and run pre-commit hooks

on:
  # Run daily at midnight.
  schedule:
    - cron: '0 0 * * *'
# Also enable running manually.
  workflow_dispatch:

jobs:
  # This workflow contains a single job called 'autoupdate'.
  autoupdate:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        # Don't use release tags for actions:  https://julienrenaux.fr/2019/12/20/github-actions-security-risk/
        # Commit is equivalent to release tag v2.3.2.
        uses: actions/checkout@2036a08e25fa78bbd946711a407b529a0a1204bf

      - name: Set the name of the branch for these changes
        id: branch
        run: echo "::set-output name=branchname::pre-commit-autoupdate"

      - name: Set up Python
        # Commit is equivalent to release tag v2.1.2.
        uses: actions/setup-python@24156c231c5e9d581bde27d0cdbb72715060ea51
        with:
          python-version: '>=3'

      - name: Install pre-commit
        run: pip install pre-commit

      - name: ${{ github.workflow }}
        run: |
          pre-commit autoupdate
          until pre-commit run --all-files
          do
            printf "\nRe-running pre-commits...\n"
          done

      - name: Create pull request
        id: pr
        # Commit is equivalent to release tag v3.2.0.
        uses: peter-evans/create-pull-request@9bf4b302a561e1fe9120f6dc81cc39daed984a99
        with:
          branch: ${{ steps.branch.outputs.branchname }}
          commit-message: ${{ github.workflow }}
          title: ${{ github.workflow }}
          body: Automated changes performed by a GitHub workflow.

      - name: Set the file name for the Towncrier news fragment
        id: newsfile
        # Only run if the PR exists.
        if: ${{ steps.pr.outputs.pull-request-number }}
        run: echo "::set-output name=filename::${{ steps.pr.outputs.pull-request-number }}.misc"

      - name: Make a Towncrier news fragment and push it to the branch
        # Only run if the PR exists.
        if: ${{ steps.newsfile.outputs.filename }}
        run: |
          echo "${{ github.workflow }}." > ${{ steps.newsfile.outputs.filename }}
          git config user.name "GitHub"
          git config user.email "noreply@github.com"
          git checkout ${{ steps.branch.outputs.branchname }}
          git add ${{ steps.newsfile.outputs.filename }}
          git commit -m "Add news fragment"
          git push origin ${{ steps.branch.outputs.branchname }}
